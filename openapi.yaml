openapi: 3.0.1
info:
  title: Admin Functionality API
  version: 1.0.0
  description: User, Role, and Permission Management API
servers:
  - url: http://localhost:8080

tags:
  - name: User Management
    description: Operations related to Users
  - name: Role Management
    description: Operations related to Roles
  - name: Permission Management
    description: Operations related to Permissions

paths:
  /api/users:
    get:
      tags: [User Management]
      summary: Get all users
      responses:
        '200':
          description: List of users
    post:
      tags: [User Management]
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /api/users/{id}:
    get:
      tags: [User Management]
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: User object
    put:
      tags: [User Management]
      summary: Update user
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
    delete:
      tags: [User Management]
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '204':
          description: User deleted
  /api/users/{id}/roles:
    post:
      tags: [User Management]
      summary: Assign roles to user
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Roles assigned
  /api/roles:
    get:
      tags: [Role Management]
      summary: Get all roles
      responses:
        '200':
          description: List of roles
    post:
      tags: [Role Management]
      summary: Create a new role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '201':
          description: Role created
  /api/roles/{id}:
    get:
      tags: [Role Management]
      summary: Get role by ID
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Role object
    put:
      tags: [Role Management]
      summary: Update role
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: Role updated
    delete:
      tags: [Role Management]
      summary: Delete role
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '204':
          description: Role deleted
  /api/roles/{id}/permissions:
    post:
      tags: [Role Management]
      summary: Assign permissions to role
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Permission'
      responses:
        '200':
          description: Permissions assigned
  /api/permissions:
    get:
      tags: [Permission Management]
      summary: Get all permissions
      responses:
        '200':
          description: List of permissions
    post:
      tags: [Permission Management]
      summary: Create a new permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '201':
          description: Permission created
  /api/permissions/{id}:
    get:
      tags: [Permission Management]
      summary: Get permission by ID
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Permission object
    put:
      tags: [Permission Management]
      summary: Update permission
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        '200':
          description: Permission updated
    delete:
      tags: [Permission Management]
      summary: Delete permission
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '204':
          description: Permission deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    Permission:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string